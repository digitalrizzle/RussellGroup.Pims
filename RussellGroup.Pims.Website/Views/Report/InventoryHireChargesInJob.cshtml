@model RussellGroup.Pims.DataAccess.ReportModels.InventoryHireChargesInJobReportModel

@{
    Layout = "~/Views/Shared/_ReportLayout.cshtml";
    ViewBag.Title = "Inventory Hire Charges";
    var hire = Model.Job.InventoryHires.FirstOrDefault();
}

<h4>@ViewBag.Title</h4>
<h2>@Model.Job.XJobId</h2>
<h3>@Model.Job.Description</h3>
<h4>
    Project Manager:
    @{
        if (string.IsNullOrWhiteSpace(Model.Job.ProjectManager))
        {
            <text><i>Not assigned</i></text>
        }
        else
        {
            <text>@Model.Job.ProjectManager</text>
        }
    }
</h4>
<h5>Period: @Model.WhenStarted.ToShortDateString() to @Model.WhenEnded.ToShortDateString()</h5>

@if (!Model.Charges.Any())
{
    <p>There are no inventory hire charges for this job in the given period.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    inventory id
                </th>
                <th>
                    @Html.DisplayNameFor(model => hire.Inventory.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => hire.Docket)
                </th>
                <th>
                    @Html.DisplayNameFor(model => (hire as InventoryHireCheckout).WhenStarted)
                </th>
                <th>
                    @Html.DisplayNameFor(model => (hire as InventoryHireCheckin).WhenEnded)
                </th>
                <th class="text-right">
                    days
                </th>
                <th class="text-right">
                    @Html.DisplayNameFor(model => hire.Quantity)
                </th>
                <th class="text-right">
                    @Html.DisplayNameFor(model => hire.Inventory.Rate)
                </th>
                <th class="text-right">
                    cost
                </th>
            </tr>
        </thead>

        <tbody>
            @{decimal grandTotal = 0;}

            @foreach (var categoryType in Model
                .Charges
                .Select(f => f.Inventory.Category.Type)
                .Distinct()
                .OrderBy(f => f)
                .ToList())
            {
                <tr>
                    <td colspan="9"><h4>@categoryType</h4></td>
                </tr>

                decimal categoryTypeTotal = 0;
                
                foreach (var category in Model
                    .Charges
                    .Select(f => f.Inventory.Category)
                    .Where(f => f.Type == categoryType)
                    .Distinct()
                    .OrderBy(f => f.Name)
                    .ToList())
                {
                    <tr>
                        <td colspan="9"><strong>@category.Name</strong></td>
                    </tr>
                
                    decimal categoryTotal = 0;    
                
                    foreach (var charge in Model
                        .Charges
                        .Where(f => f.Inventory.Category == category)
                        .OrderBy(f => f.Inventory.XInventoryId))
                    {                        
                        <tr>
                            <td>
                                @Html.DisplayFor(model => charge.Inventory.XInventoryId)
                            </td>
                            <td colspan="8">
                                @Html.DisplayFor(model => charge.Inventory.Description)
                            </td>
                        </tr>
                
                        if (charge.OpeningBalance != 0)
                        {
                            <tr>
                                <td colspan="3">
                                    <i>opening balance</i>
                                </td>
                                <td>
                                    @Model.WhenStarted.ToShortDateString()
                                </td>
                                <td></td>
                                <td class="text-right">
                                    @charge.Days
                                </td>
                                <td class="text-right">
                                    @charge.OpeningBalance
                                </td>
                                <td class="text-right">
                                    @charge.Rate
                                </td>
                                <td class="text-right">
                                    @charge.OpeningBalanceCost
                                </td>
                            </tr>
                        }
                        
                        foreach (var item in charge
                            .ItemCharges
                            .OrderBy(f => f.Docket))
                        {
                            <tr>
                                <td colspan="2"></td>
                                <td>
                                    @item.Docket
                                </td>
                                <td>
                                    @(item.WhenStarted.HasValue ? item.WhenStarted.Value.ToShortDateString() : string.Empty)
                                </td>
                                <td>
                                    @(item.WhenEnded.HasValue ? item.WhenEnded.Value.ToShortDateString() : string.Empty)
                                </td>
                                <td class="text-right">
                                    @item.Days
                                </td>
                                <td class="text-right">
                                    @item.Quantity
                                </td>
                                <td class="text-right">
                                    @item.Rate
                                </td>
                                <td class="text-right">
                                    @item.Cost
                                </td>
                            </tr>
                        }

                        categoryTotal += charge.Cost;

                        <tr style="background-color: #efefef">
                            <td colspan="6"><i>closing balance</i></td>
                            <td colspan="1" class="text-right"><i>@charge.ClosingBalance</i></td>
                            <td></td>
                            <td colspan="1" class="text-right"><i>@(string.Format("${0:0.00}", charge.Cost))</i></td>
                        </tr>
                    }

                    categoryTypeTotal += categoryTotal;
                    
                    <tr>
                        <td colspan="8"></td>
                        <td colspan="1" class="text-right"><strong>@(string.Format("${0:0.00}", categoryTotal))</strong></td>
                    </tr>
                }
                
                grandTotal += categoryTypeTotal;
                
                <tr>
                    <td colspan="8"><h4>@categoryType total</h4></td>
                    <td colspan="1" class="text-right"><h4>@(string.Format("${0:0.00}", categoryTypeTotal))</h4></td>
                </tr>
            }
            <tr>
                <td colspan="8"><h4>TOTAL</h4></td>
                <td colspan="1" class="text-right"><h4>@(string.Format("${0:0.00}", grandTotal))</h4></td>
            </tr>
        </tbody>
    </table>
}
