@model RussellGroup.Pims.DataAccess.Models.Inventory

<h2>Inventory</h2>

<div>
    <h4>@Html.GetAction()</h4>
    <hr />

    @if (@Html.IsAction("Delete"))
    {
        if (!Model.CanDelete)
        {
            <div class="alert alert-info">
                <h4>Cannot delete</h4>
                <p>This inventory item cannot be deleted because it has a job associated to it. Delete the jobs that have this item as hired.</p>
            </div>
        }
        else
        {
            <h3>Are you sure you want to delete this inventory item?</h3>
        }
    }

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.XInventoryId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.XInventoryId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.WhenPurchased)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.WhenPurchased)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.WhenDisused)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.WhenDisused)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Rate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Rate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Cost)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Cost)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Quantity)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Quantity)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Category.Name)
        </dd>

        <dt>
            jobs
        </dt>
        <dd>
            @Html.Encode(Model.InventoryHires.Select(f => f.Job).Distinct().Count())
        </dd>

    </dl>

    <hr />

    <dl class="dl-horizontal">
        <dt>
        </dt>
        <dd>
            @using (Html.BeginForm())
            {
                if (User.IsAuthorized(Role.CanEdit))
                {
                    if (Html.IsAction("Details"))
                    {
                        <text>@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) | </text>
                    }
                    else if (Model.CanDelete)
                    {
                        @Html.AntiForgeryToken()
                        <input type="submit" value="Delete" class="btn btn-danger" />
                        <text>&nbsp;</text>
                    }
                }
                @Html.ActionLink("Cancel", "Index")
            }
        </dd>
    </dl>
</div>
