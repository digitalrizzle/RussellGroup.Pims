@model RussellGroup.Pims.DataAccess.Models.Category

<hr />

@if (ViewData.ModelState.Any(f => string.IsNullOrEmpty(f.Key)))
{
    @Html.ValidationSummary(true, null, new { @class = "alert alert-danger" })
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)

    <div class="form-horizontal">

        <div class="form-group@(ViewData.ModelState.IsValidField("Type") ? string.Empty : " has-error")">
            @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <div class="input-group tt-input-group">
                    @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control", placeholder = "begin typing a type..." } })
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.Type, null, new { @class = "help-block form-control-feedback" })
        </div>

        <div class="form-group@(ViewData.ModelState.IsValidField("Name") ? string.Empty : " has-error")">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(model => model.Name, null, new { @class = "help-block form-control-feedback" })
        </div>

        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Html.IsAction("Edit"))
                {
                    <input type="submit" value="Save" class="btn btn-primary" />
                }
                else
                {
                    <input type="submit" value="Create" class="btn btn-primary" />
                }
                &nbsp;
                @Html.ActionLink("Cancel", "Index")
            </div>
        </div>
    </div>
}
