@model RussellGroup.Pims.Website.Models.CheckinTransaction
@{
    ViewBag.ShowAnchors = true;
    ViewBag.Title = Html.MvcSiteMap().SiteMapTitle();
    var plantHire = Model.PlantHires.FirstOrDefault();
    var inventoryHire = Model.InventoryHires.FirstOrDefault();
}
@section head {
    @Styles.Render("~/Content/datatables")
}

<h3>@ViewBag.Title</h3>
<h4>@Model.Job.XJobId</h4>
<h5>@Model.Job.Description</h5>

<hr />

@if (ViewData.ModelState.Any(f => string.IsNullOrEmpty(f.Key)))
{
    @Html.ValidationSummary(true, null, new { @class = "alert alert-danger" })
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Job.Id)
    @Html.HiddenFor(model => model.Job.Description)
    @Html.Hidden("selectedPlantHire")
    @Html.Hidden("selectedInventoryHire")

    <div class="form-horizontal">
        <div class="form-group@(ViewData.ModelState.IsValidField("ReturnDocket") ? string.Empty : " has-error")">
            @Html.Label("return docket", new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.ReturnDocket, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.ReturnDocket, null, new { @class = "help-block form-control-feedback" })
        </div>

        <div class="form-group @(ViewData.ModelState.IsValidField("WhenEnded") ? string.Empty : " has-error")">
            @Html.LabelFor(model => model.WhenEnded, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class="input-group">
                    @Html.TextBoxFor(model => model.WhenEnded, "{0:d/MM/yyyy}", new { @class = "form-control" })
                    <span id="WhenEnded-icon" class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.WhenEnded, null, new { @class = "form-control-feedback" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlantHires, new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="margin-top:-3px">
                <table id="plant-hire-table" class="table display table-striped table-hover order-column table-responsive" width="100%">
                    <thead>
                        <tr>
                            <th></th>
                            <th><input type="checkbox" class="check-all" /></th>
                            <th>
                                @Html.DisplayNameFor(model => plantHire.Plant.XPlantId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => plantHire.Plant.XPlantNewId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => plantHire.Docket)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => plantHire.Plant.Description)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.PlantHires)
                        {
                            <tr>
                                <td>@item.PlantId</td>
                                <td><input name="@("plant-hire-id-field" + item.Id)" value="@item.Id" type="checkbox" /></td>
                                <td>@Html.DisplayFor(modelItem => item.Plant.XPlantId)</td>
                                <td>@Html.DisplayFor(modelItem => item.Plant.XPlantNewId)</td>
                                <td>@Html.DisplayFor(modelItem => item.Docket)</td>
                                <td>@Html.DisplayFor(modelItem => item.Plant.Description)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InventoryHires, new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="margin-top:-3px">
                <table id="inventory-hire-table" class="table display table-striped table-hover order-column table-responsive" width="100%">
                    <thead>
                        <tr>
                            <th></th>
                            <th><input type="checkbox" class="check-all" /></th>
                            <th>
                                @Html.DisplayNameFor(model => inventoryHire.Quantity)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => (inventoryHire as InventoryHireCheckin).CheckedOutQuantity)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => inventoryHire.Inventory.XInventoryId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => inventoryHire.Inventory.Description)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.InventoryHires)
                        {
                            <tr>
                                <td>item.InventoryId</td>
                                <td><input name="@("inventory-id-field" + item.InventoryId)" value="@item.InventoryId" type="checkbox" /></td>
                                <td><input name="@("inventory-hire-quantity-field" + item.InventoryId)" value="@item.Quantity" type="number" class="form-control input-sm" /></td>
                                <td>@((item as InventoryHireCheckin).CheckedOutQuantity)</td>
                                <td>@Html.DisplayFor(model => item.Inventory.XInventoryId)</td>
                                <td>@Html.DisplayFor(model => item.Inventory.Description)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Checkin" class="btn btn-primary" />
                &nbsp;
                @Html.ActionLink("Cancel", "Index", "Job")
            </div>
        </div>
    </div>
}

@section scripts {
    @Scripts.Render("~/bundles/datatables")
    <script>
        $(document).ready(function () {
            // set checkboxes if there is a postback
            @foreach (var hire in Model.PlantHires.Where(f => f.IsSelected)) { <text>$('input[name="plant-hire-id-field@(hire.Id)"]').prop('checked', true);</text> }
            @foreach (var hire in Model.InventoryHires.Where(f => f.IsSelected)) { <text>$('input[name="inventory-id-field@(hire.InventoryId)"]').prop('checked', true);</text> }
        });

        var plantHireTable = $('#plant-hire-table').dataTable({
            "order": [[3, "asc"]],
            "processing": true,
            "stateSave": false,
            "paging": false,
            "columnDefs": [
                { "visible": false, "targets": [0] },
                { "sortable": false, "targets": [1] }
            ]
        });

        var inventoryHireTable = $('#inventory-hire-table').dataTable({
            "order": [[4, "asc"]],
            "processing": true,
            "stateSave": false,
            "paging": false,
            "columnDefs": [
                { "visible": false, "targets": [0] },
                { "sortable": false, "targets": [1, 2] },
                { "className": "text-right", "targets": [2, 3] }
            ]
        });

        $('.check-all').on('click', function () {
            $(this).closest('table').find(':checkbox').prop('checked', this.checked);
        });

        $("form").submit(function (event) {
            var plantHireSubmitData = plantHireTable.$(':checkbox').serialize();
            $('#selectedPlantHire').val(plantHireSubmitData);

            var inventoryHireSubmitData = inventoryHireTable.$(':checkbox,:input[type="number"]').serialize();
            $('#selectedInventoryHire').val(inventoryHireSubmitData);
        });
    </script>
}