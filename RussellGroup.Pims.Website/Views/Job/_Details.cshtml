@model RussellGroup.Pims.DataAccess.Models.Job

<h2>Job</h2>

<div>
    <h4>@SiteMaps.Current.CurrentNode.Title</h4>
    <hr />

    @if (@Html.IsAction("Delete"))
    {
        <h3>Are you sure you want to delete this job and its hire transactions?</h3>
    }

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.WhenStarted)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.WhenStarted)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.WhenEnded)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.WhenEnded)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ProjectManager)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ProjectManager)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.QuantitySurveyor)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.QuantitySurveyor)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Comment)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Comment)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PlantHires)
        </dt>
        <dd>
            @if (Model.PlantHires.Count > 0)
            {
                var all = Model.PlantHires.Count;
                var checkedIn = Model.PlantHires.Count(f => f.WhenEnded.HasValue);
                
                <text>@Html.ActionLink(string.Format("{0} total transactions, {1} checked in", all, checkedIn), "Index", "PlantHire", new { id = Model.Id }, null)</text>
            }
            else
            {
                <text>0</text>
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.InventoryHires)
        </dt>
        <dd>
            @if (Model.InventoryHires.Count > 0)
            {
                var all = Model.InventoryHires.Count;
                var checkedIn = Model.InventoryHires.Count(f => f.WhenEnded.HasValue);

                <text>@Html.ActionLink(string.Format("{0} total transactions, {1} checked in", all, checkedIn), "Index", "InventoryHire", new { id = Model.Id }, null)</text>
            }
            else
            {
                <text>0</text>
            }
        </dd>
    </dl>

    <hr />

    <dl class="dl-horizontal">
        <dt>
        </dt>
        <dd>
            @using (Html.BeginForm())
            {
                if (User.IsAuthorized(Role.CanEdit))
                {
                    if (Html.IsAction("Details"))
                    {
                        <text>
                            @Html.ActionLink("Checkout", "Checkout", "Hire", new { id = Model.Id }, null) |
                            @Html.ActionLink("Checkin", "Checkin", "Hire", new { id = Model.Id }, null) |
                            @Html.ActionLink("Delete", "Delete", new { id = Model.Id }) |
                            @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
                        </text>
                    }
                    else
                    {
                        @Html.AntiForgeryToken()
                        <input type="submit" value="Delete" class="btn btn-danger" />
                        <text>&nbsp;</text>
                    }
                }
                @Html.ActionLink("Cancel", "Index")
            }
        </dd>
    </dl>
</div>
